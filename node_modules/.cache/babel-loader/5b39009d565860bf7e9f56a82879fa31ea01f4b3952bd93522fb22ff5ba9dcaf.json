{"ast":null,"code":"var produto = document.getElementById(\"produto\"); // variavel que recebe o elemento html 'input' com id #produto\nvar quantidade = document.getElementById(\"quantidade\"); // variavel que recebe o elemento html 'input' com id #quantidade\nvar preço = document.getElementById(\"preço\"); // variavel que recebe o elemento html 'input' com id #preço\n\nfunction Verificar() {\n  // funçao para verificar se todos os items estao preenchidos antes de adicionar\n\n  if (produto.value === \"\" && quantidade.value === 0 && preço.value <= 0) {\n    window.alert(\"Preencha todos os campos para adicionar um produto/item no estoque!\"); // exibe alertas de erro\n  } else if (produto.value === \"\") {\n    window.alert('Preencha o \"Nome do Item\" para adicionar um produto/item no estoque!');\n  } else if (quantidade.value === 0) {\n    window.alert('Preencha a \"Quantidade\" para adicionar um produto/item no estoque!');\n  } else if (preço.value <= 0) {\n    window.alert('Preencha o campo \"Preço\" para adicionar um produto/item no estoque!');\n  }\n}\n_c = Verificar;\nexport default Verificar;\nfunction Adicionar() {\n  // funcao para adicionar um novo produto ao estoque\n\n  var novo = document.getElementById(\"produto\").value; // recebe o 'valor' da variavel (value)\n  var qtd = document.getElementById(\"quantidade\").value;\n  var prç = document.getElementById(\"preço\").value;\n  if (!novo) {\n    // verifica se todos os itens estao preenchidos antes de adicionar\n    return false;\n  } else if (!qtd) {\n    return false;\n  } else if (!prç) {\n    return false; // retorna 'false' caso nao esteja preenchido e não prosegue a funçao\n  }\n\n  var item = {\n    // cria o objeto 'item'\n    nome: novo,\n    // atributos do objeto\n    quant: qtd,\n    valor: prç\n  };\n  if (localStorage.getItem(\"estoqueItens\") === null) {\n    // criar uma tabela (localStorage) para armazenar os dados, caso não exista\n\n    var itens = []; // array\n    itens.push(item); // adiciona itens a ultima posiçao do array\n    localStorage.setItem(\"estoqueItens\", JSON.stringify(itens)); // armazena um item no localStorage do navegador e transforma em um JSON do tipo string (formato aceito pelo localStorage)\n  } else {\n    var itens = JSON.parse(localStorage.getItem(\"estoqueItens\")); // transforma um item em um JSON do tipo objeto\n    itens.push(item);\n    localStorage.setItem(\"estoqueItens\", JSON.stringify(itens));\n  }\n}\n_c2 = Adicionar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Verificar\");\n$RefreshReg$(_c2, \"Adicionar\");","map":{"version":3,"names":["produto","document","getElementById","quantidade","preço","Verificar","value","window","alert","_c","Adicionar","novo","qtd","prç","item","nome","quant","valor","localStorage","getItem","itens","push","setItem","JSON","stringify","parse","_c2","$RefreshReg$"],"sources":["C:/Users/maria/OneDrive/Documentos/Estudos Programação/Estoque/programa-estoque/src/main-verificar.js"],"sourcesContent":["var produto = document.getElementById(\"produto\"); // variavel que recebe o elemento html 'input' com id #produto\r\nvar quantidade = document.getElementById(\"quantidade\"); // variavel que recebe o elemento html 'input' com id #quantidade\r\nvar preço = document.getElementById(\"preço\"); // variavel que recebe o elemento html 'input' com id #preço\r\n\r\nfunction Verificar() {\r\n  // funçao para verificar se todos os items estao preenchidos antes de adicionar\r\n\r\n  if (produto.value === \"\" && quantidade.value === 0 && preço.value <= 0) {\r\n    window.alert(\r\n      \"Preencha todos os campos para adicionar um produto/item no estoque!\"\r\n    ); // exibe alertas de erro\r\n  } else if (produto.value === \"\") {\r\n    window.alert(\r\n      'Preencha o \"Nome do Item\" para adicionar um produto/item no estoque!'\r\n    );\r\n  } else if (quantidade.value === 0) {\r\n    window.alert(\r\n      'Preencha a \"Quantidade\" para adicionar um produto/item no estoque!'\r\n    );\r\n  } else if (preço.value <= 0) {\r\n    window.alert(\r\n      'Preencha o campo \"Preço\" para adicionar um produto/item no estoque!'\r\n    );\r\n  }\r\n}\r\nexport default Verificar;\r\n\r\nfunction Adicionar() {\r\n  // funcao para adicionar um novo produto ao estoque\r\n\r\n  var novo = document.getElementById(\"produto\").value; // recebe o 'valor' da variavel (value)\r\n  var qtd = document.getElementById(\"quantidade\").value;\r\n  var prç = document.getElementById(\"preço\").value;\r\n\r\n  if (!novo) {\r\n    // verifica se todos os itens estao preenchidos antes de adicionar\r\n    return false;\r\n  } else if (!qtd) {\r\n    return false;\r\n  } else if (!prç) {\r\n    return false; // retorna 'false' caso nao esteja preenchido e não prosegue a funçao\r\n  }\r\n\r\n  var item = {\r\n    // cria o objeto 'item'\r\n    nome: novo, // atributos do objeto\r\n    quant: qtd,\r\n    valor: prç,\r\n  };\r\n\r\n  if (localStorage.getItem(\"estoqueItens\") === null) {\r\n    // criar uma tabela (localStorage) para armazenar os dados, caso não exista\r\n\r\n    var itens = []; // array\r\n    itens.push(item); // adiciona itens a ultima posiçao do array\r\n    localStorage.setItem(\"estoqueItens\", JSON.stringify(itens)); // armazena um item no localStorage do navegador e transforma em um JSON do tipo string (formato aceito pelo localStorage)\r\n  } else {\r\n    var itens = JSON.parse(localStorage.getItem(\"estoqueItens\")); // transforma um item em um JSON do tipo objeto\r\n    itens.push(item);\r\n    localStorage.setItem(\"estoqueItens\", JSON.stringify(itens));\r\n  }\r\n}\r\n"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;AAClD,IAAIC,UAAU,GAAGF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAAC,CAAC;AACxD,IAAIE,KAAK,GAAGH,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9C,SAASG,SAASA,CAAA,EAAG;EACnB;;EAEA,IAAIL,OAAO,CAACM,KAAK,KAAK,EAAE,IAAIH,UAAU,CAACG,KAAK,KAAK,CAAC,IAAIF,KAAK,CAACE,KAAK,IAAI,CAAC,EAAE;IACtEC,MAAM,CAACC,KAAK,CACV,qEAAqE,CACtE,CAAC,CAAC;EACL,CAAC,MAAM,IAAIR,OAAO,CAACM,KAAK,KAAK,EAAE,EAAE;IAC/BC,MAAM,CAACC,KAAK,CACV,sEAAsE,CACvE;EACH,CAAC,MAAM,IAAIL,UAAU,CAACG,KAAK,KAAK,CAAC,EAAE;IACjCC,MAAM,CAACC,KAAK,CACV,oEAAoE,CACrE;EACH,CAAC,MAAM,IAAIJ,KAAK,CAACE,KAAK,IAAI,CAAC,EAAE;IAC3BC,MAAM,CAACC,KAAK,CACV,qEAAqE,CACtE;EACH;AACF;AAACC,EAAA,GApBQJ,SAAS;AAqBlB,eAAeA,SAAS;AAExB,SAASK,SAASA,CAAA,EAAG;EACnB;;EAEA,IAAIC,IAAI,GAAGV,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACI,KAAK,CAAC,CAAC;EACrD,IAAIM,GAAG,GAAGX,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACI,KAAK;EACrD,IAAIO,GAAG,GAAGZ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACI,KAAK;EAEhD,IAAI,CAACK,IAAI,EAAE;IACT;IACA,OAAO,KAAK;EACd,CAAC,MAAM,IAAI,CAACC,GAAG,EAAE;IACf,OAAO,KAAK;EACd,CAAC,MAAM,IAAI,CAACC,GAAG,EAAE;IACf,OAAO,KAAK,CAAC,CAAC;EAChB;;EAEA,IAAIC,IAAI,GAAG;IACT;IACAC,IAAI,EAAEJ,IAAI;IAAE;IACZK,KAAK,EAAEJ,GAAG;IACVK,KAAK,EAAEJ;EACT,CAAC;EAED,IAAIK,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,KAAK,IAAI,EAAE;IACjD;;IAEA,IAAIC,KAAK,GAAG,EAAE,CAAC,CAAC;IAChBA,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC,CAAC,CAAC;IAClBI,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC,MAAM;IACL,IAAIA,KAAK,GAAGG,IAAI,CAACE,KAAK,CAACP,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAC9DC,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC;IAChBI,YAAY,CAACI,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;EAC7D;AACF;AAACM,GAAA,GAlCQhB,SAAS;AAAA,IAAAD,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}